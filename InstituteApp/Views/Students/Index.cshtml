@using ReflectionIT.Mvc.Paging
@model PagingList<InstituteApp.Models.Student>

@{ ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml"; }

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<br />
<br />
<form method="get" asp-action="Index">
    Search by Name:<input type="search" name="searchString" value="@ViewData["currentFilter"]" placeholder="search" />
    <input type="submit" value="Search" class="btn btn-sm btn-success" />
</form>
<br />
<nav aria-label="Products navigation example">
    <vc:pager paging-list="@Model"></vc:pager>
</nav>
<table class="table" @*id="Student_List"*@>
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["sortName"]">
                    First Name
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["sortByDate"]">
                    Enrollment Date
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.FirstName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.LastName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.EnrollmentDate)
    </td>
    <td>
        <partial name="Partials/_GroupButtonPartial" model="@item.StudentId" />
    </td>
</tr>}
    </tbody>
</table>
<nav aria-label="Products navigation example">
    <vc:pager paging-list="@Model"></vc:pager>
</nav>
@*@section Scripts{
        <script src="js/custom.js"></script>
    }*@
